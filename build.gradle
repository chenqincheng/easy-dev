buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven { url 'http://repo.spring.io/plugins-release' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

allprojects {

    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: "org.springframework.boot"
    apply plugin: 'propdeps-idea'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8

    group 'cn.tac.framework'
    version '2.0-SNAPSHOT'

    dependencies {
        compile(
                ['org.springframework.boot:spring-boot-starter'],
        )
        testCompile(
                ['org.springframework.boot:spring-boot-starter-test'],
        )
        optional "org.springframework.boot:spring-boot-devtools"
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar {
                    classifier "sources"
                }
                pom.withXml {
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each() {
                        it.scope*.value = 'compile'
                    }
                }
            }
        }

        repositories {
            def NEXUS_URL = "http://172.10.10.66:8081/nexus/content/repositories"
            if (project.version.endsWith("SNAPSHOT")) {
                NEXUS_URL = "$NEXUS_URL/snapshots/"
            } else {
                NEXUS_URL = "$NEXUS_URL/releases/"
            }

            maven {
                url "$buildDir/repo"
            }
            maven {
                url NEXUS_URL
                credentials {
                    username = "admin"
                    password = "admin123"
                }
            }
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }
}
